/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.alvarogalia.Client;

import com.alvarogalia.Client.Obj.DetalleListaNegra;
import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.Query;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alvaro
 */
public class FrameListaNegra extends javax.swing.JFrame {

    /**
     * Creates new form FrameListaNegra
     */
    String ubicacion = "";
    FirebaseDatabase database;
    DefaultTableModel model;
    FrameDetalleListaNegra frameDetalleListaNegra;
    
    public Map<String, DetalleListaNegra> arrListaNegra = new HashMap<>();
    public boolean hayCambios = false;
    
    public FrameListaNegra(FirebaseDatabase pDatabase, Main main) {
        main.setVisible(false);
        initComponents();
        database = pDatabase;
        frameDetalleListaNegra = new FrameDetalleListaNegra(database);
        ubicacion = "Brasil";
        
        model = (DefaultTableModel)tblListaNegra.getModel();
        Query qListaNegra = database.getReference("listaNegra/" + ubicacion);
        qListaNegra.addChildEventListener(new ChildEventListener() {
            @Override
            public void onChildAdded(DataSnapshot ds, String string) {
                System.out.println(ds);
                try{
                    DetalleListaNegra detalle = ds.getValue(DetalleListaNegra.class);
                arrListaNegra.put(ds.getKey(), detalle);
                model.insertRow(model.getRowCount(), new Object[]{ds.getKey(),Util.longToDate(detalle.getTimestampIngreso()),detalle.getRazon(),detalle.getContactoInformante(),detalle.getAccion()});
                }catch(Exception e){
                    e.printStackTrace();
                }
                hayCambios = true;
            }

            @Override
            public void onChildChanged(DataSnapshot ds, String string) {
                DetalleListaNegra detalle = ds.getValue(DetalleListaNegra.class);
                arrListaNegra.replace(ds.getKey(), detalle);
                for(int i = 0; i < model.getRowCount(); i++){
                   if(model.getValueAt(i, 0).equals(ds.getKey())){
                       model.removeRow(i);
                       model.insertRow(i, new Object[]{ds.getKey(),Util.longToDate(detalle.getTimestampIngreso()),detalle.getRazon(),detalle.getContactoInformante(),detalle.getAccion()});
                   }
                }
                hayCambios = true;
            }

            @Override
            public void onChildRemoved(DataSnapshot ds) {
                arrListaNegra.remove(ds.getKey());
                for(int i = 0; i < model.getRowCount(); i++){
                   if(model.getValueAt(i, 0).equals(ds.getKey())){
                       model.removeRow(i);
                   }
                }
                hayCambios = true;
            }

            @Override
            public void onChildMoved(DataSnapshot ds, String string) {
            }

            @Override
            public void onCancelled(DatabaseError de) {
            }
        });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblListaNegra = new javax.swing.JTable();
        btnNuevoRegistro = new javax.swing.JButton();
        btnEliminarRegistro = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnActualizarRegistro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblListaNegra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PPU", "Fecha Registro", "Razon", "Contacto", "Accion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListaNegra.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tblListaNegra);
        tblListaNegra.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnNuevoRegistro.setText("Nuevo Registro");
        btnNuevoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoRegistroActionPerformed(evt);
            }
        });

        btnEliminarRegistro.setText("Eliminar Registro");
        btnEliminarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarRegistroActionPerformed(evt);
            }
        });

        btnCancelar.setText("Volver");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnActualizarRegistro.setText("Actualizar Registro");
        btnActualizarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarRegistroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizarRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevoRegistro)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevoRegistro)
                    .addComponent(btnEliminarRegistro)
                    .addComponent(btnCancelar)
                    .addComponent(btnActualizarRegistro))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNuevoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoRegistroActionPerformed
        frameDetalleListaNegra.limpiaCampos();
        frameDetalleListaNegra.setLocationRelativeTo(null);
        frameDetalleListaNegra.setVisible(true);
        frameDetalleListaNegra.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }//GEN-LAST:event_btnNuevoRegistroActionPerformed

    private void btnActualizarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarRegistroActionPerformed
        frameDetalleListaNegra.limpiaCampos();
        String key = (String) model.getValueAt(tblListaNegra.getSelectedRow(), 0);
        DetalleListaNegra detalle = arrListaNegra.get(key);
        frameDetalleListaNegra.cargaRegistro(key, detalle);
        frameDetalleListaNegra.setLocationRelativeTo(null);
        frameDetalleListaNegra.setVisible(true);
        frameDetalleListaNegra.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }//GEN-LAST:event_btnActualizarRegistroActionPerformed

    private void btnEliminarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarRegistroActionPerformed
        String key = (String) model.getValueAt(tblListaNegra.getSelectedRow(), 0);
        DatabaseReference refListaNegra = database.getReference("listaNegra/" + ubicacion + "/" + key);
        refListaNegra.removeValueAsync();
    }//GEN-LAST:event_btnEliminarRegistroActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarRegistro;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminarRegistro;
    private javax.swing.JButton btnNuevoRegistro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblListaNegra;
    // End of variables declaration//GEN-END:variables
}
